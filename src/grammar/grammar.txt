Prgm -> 'Program' . 'ident' . ';'. (/ Decl-Const /) . (/ Decl-Var /) . (/ Decl-Tab /) . (/ Decl-fonction /) . Bloc . '.#20' ,
Decl-Const -> (/ 'const' . 'ident#1' . '=' . ENTIER#2 . [ ';' . 'ident#1' . '=' . ENTIER#2 ] . ';' . /) ,
ENTIER -> [ '0#21' + '1#21' + '2#21' + '3#21' + '4#21' + '5#21' + '6#21' + '7#21' + '8#21' + '9#21' ] ,
Decl-Var -> (/ 'var' . 'ident#1' . [ ',' . 'ident#1' ] . ';' /) ,
Decl-Tab -> (/ 'TODO' /) ,
Decl-fonction -> (/ 'TODO' /) ,
Bloc -> 'BEGIN' . Inst . 'END' ,
Booleen -> TB . [ 'OR' . TB#9 ] ,
TB -> FB . [ 'AND' . FB#10 ] ,
FB -> ( 'NOT' . PB#13 . '!#11' ) + PB#13 ,
PB -> ( 'ident#4' + ENTIER#5 ) . OPREL . ( 'ident#4' + ENTIER#5 ) + '[' . Booleen . ']' ,
OPREL -> ( '==#22' + '>#22' + '<#22' + '>=#22' + '<=#22' + '!=#22' ) ,
OPMATH -> ( '+#23' + '++#23' + '-#23' + '--#23' + '*#23' + '/#23' + '%#23' + '!#23' ) ,
OPEGAL -> ( ':=' + '=' ) ,
Inst -> ( AFFECTATION#19 + COND + WHILE + READ + WRITE ) . [ Inst ],
AFFECTATION -> ( 'ident#3' . OPEGAL . ( 'ident#4' + ENTIER#5 ) . ( ';' + ( OPMATH . ( 'ident#4' + ENTIER#5 ) . [ OPMATH#6 . ( 'ident#4' + ENTIER#5 ) ] . ';#6' ) ) ) ,
COND -> 'IF' . Booleen#14 . 'THEN' . Inst#16 . 'ELSE#15' . Inst . 'ENDIF#17' ,
WHILE -> 'WHILE#24' . Booleen#14 . 'DO' . Inst#18 . 'ENDWHILE' ,
READ -> 'Read' . 'ident#3' . ';#7' ,
WRITE -> 'Writeln' . ( 'ident#4' + ENTIER#5 ) . ';#8' , ;
